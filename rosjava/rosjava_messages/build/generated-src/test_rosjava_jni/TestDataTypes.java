package test_rosjava_jni;

public interface TestDataTypes extends org.ros.internal.message.Message {
  static final java.lang.String _TYPE = "test_rosjava_jni/TestDataTypes";
  static final java.lang.String _DEFINITION = "# Test all primitive types\nbyte     byte_\nchar     char_\nuint8    uint8_\nint8     int8_\nuint16   uint16_\nint16    int16_\nuint32   uint32_\nint32    int32_\nuint64   uint64_\nint64    int64_\nfloat32  float32_\nfloat64  float64_\nstring   string_\ntime     time_\nduration duration_\n\n# Test a smattering of array types\nbyte[]     byte_v\nbyte[2]    byte_f\nfloat64[]  float64_v\nfloat64[2] float64_f\nstring[]   string_v\nstring[2]  string_f\ntime[]     time_v\ntime[2]    time_f\n\n# Test submsgs, including both fixed and var length\nstd_msgs/Byte    Byte_\nstd_msgs/Byte[]  Byte_v\n\nstd_msgs/ByteMultiArray    ByteMultiArray_\nstd_msgs/ByteMultiArray[]  ByteMultiArray_v\n\n# Unfortunately, can\'t test these because roscpp message generation\n# is broken.  Hopefully rosjava works correctly ...\n# TODO: put these back in.\n\n# std_msgs/Byte[2] Byte_f\n# std_msgs/ByteMultiArray[2] ByteMultiArray_f\n";
  byte getByte();
  void setByte(byte value);
  byte getChar();
  void setChar(byte value);
  byte getUint8();
  void setUint8(byte value);
  byte getInt8();
  void setInt8(byte value);
  short getUint16();
  void setUint16(short value);
  short getInt16();
  void setInt16(short value);
  int getUint32();
  void setUint32(int value);
  int getInt32();
  void setInt32(int value);
  long getUint64();
  void setUint64(long value);
  long getInt64();
  void setInt64(long value);
  float getFloat32();
  void setFloat32(float value);
  double getFloat64();
  void setFloat64(double value);
  java.lang.String getString();
  void setString(java.lang.String value);
  org.ros.message.Time getTime();
  void setTime(org.ros.message.Time value);
  org.ros.message.Duration getDuration();
  void setDuration(org.ros.message.Duration value);
  org.jboss.netty.buffer.ChannelBuffer getByteV();
  void setByteV(org.jboss.netty.buffer.ChannelBuffer value);
  org.jboss.netty.buffer.ChannelBuffer getByteF();
  void setByteF(org.jboss.netty.buffer.ChannelBuffer value);
  double[] getFloat64V();
  void setFloat64V(double[] value);
  double[] getFloat64F();
  void setFloat64F(double[] value);
  java.util.List<java.lang.String> getStringV();
  void setStringV(java.util.List<java.lang.String> value);
  java.util.List<java.lang.String> getStringF();
  void setStringF(java.util.List<java.lang.String> value);
  java.util.List<org.ros.message.Time> getTimeV();
  void setTimeV(java.util.List<org.ros.message.Time> value);
  java.util.List<org.ros.message.Time> getTimeF();
  void setTimeF(java.util.List<org.ros.message.Time> value);
  std_msgs.ByteMultiArray getByteMultiArray();
  void setByteMultiArray(std_msgs.ByteMultiArray value);
  java.util.List<std_msgs.ByteMultiArray> getByteMultiArrayV();
  void setByteMultiArrayV(java.util.List<std_msgs.ByteMultiArray> value);
}
