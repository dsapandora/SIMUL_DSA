import java.util.LinkedList;

import planificador.gestorPlanes.Accion;
import planificador.gestorPlanes.Meta;
import planificador.gestorPlanes.Plan;
import secuenciador.interprete.Tarea;
import infraestructura.Actuador;
import infraestructura.Bumpers;
import infraestructura.Estado;
import infraestructura.Laser;
import infraestructura.Motor;
import infraestructura.Robot;
import infraestructura.Sensor;
import infraestructura.Sonar;

import com.mobilerobots.Aria.*;

public class pruebaAriaAvanzada {
	
	/* Nmero de sensores snar del robot */
    static final int NUM_SENSORES = 8;
    
    /* Nmero de bumpers delanteros del robot */
    static final int NUM_BUMPERS = 5;
    

	public static void main (String[] args) {
    	
    	/* Inicializacion del robot real y el servidor ARIA */
    
        
        /* Inicializacin de la arquitectura */
        Robot rob;
		Sensor[] sensores_robot = new Sensor[2];
		Actuador[] actuadores_robot = new Actuador[1];
		Estado estado = new Estado(null, new Tarea("Inicio", null));
		Sonar son = new Sonar(NUM_SENSORES);
		sensores_robot[0] = son;
		Bumpers bump = new Bumpers(NUM_BUMPERS, 0);
		sensores_robot[1] = bump;
		Motor motor = new Motor();
		actuadores_robot[0] = motor;
		
		/* Creacion de un plan para pasar al secuenciador */
		Plan plan;
		Meta meta_global = new Meta("DetectarAlgo", null);
		LinkedList<Accion> acciones = new LinkedList<Accion>();
		acciones.add(new Accion("MantenerTrayectoria"));
		//acciones.add(new Accion("EncontrarAlgo"));
		acciones.add(new Accion("PuntoEnfrente"));
		/*
		Meta meta_global = new Meta("EvitarChoque", null);
		LinkedList<Accion> acciones = new LinkedList<Accion>();
		//acciones.add(new Accion("MantenerDireccion"));
		acciones.add(new Accion("EncontrarAlgo"));
*/
	
		plan = new Plan("PLAN4", meta_global, acciones);
		//plan = new Plan("PLAN4", meta_global, null);
		
		/* Inicializacion del robot con sus elementos y el plan */
		rob = new Robot(estado, sensores_robot, actuadores_robot, false);
		rob.getArquitectura().getSecuenciador().setPlan(plan);
		
        rob.getSonar().leerSonar();
     //   rob.getMotor().setRuedas(60, 60);
		while(rob.getEstado().getTarea().getNombre().compareTo("Fin")!=0){
			rob.getSonar().leerSonar();
			boolean cuidado = false;
			for(int i=0;i<8;i++){
				System.out.println(rob.getSonar().getValorSonar(i));
				 if(rob.getSonar().getValorSonar(i)<850)
					 
					 cuidado=true;
				 }
			/* Se toma info de la odometria y se almcacena */
			rob.getMotor().setDistancia();
			rob.getMotor().setGiro();
			
			/* Se toma info de los sonar y se almacena */
				
			/* Se toma info de los bumpers y se almacena */
            
			System.out.println(rob.getEstado().getTarea().getNombre());
			
            
            if(!cuidado)
            	rob.getBumpers().setValor(0);
			

			rob.getBumpers().leerBumper();
            /* Si hay choque, informar para tratar de recuperarse */
			if(rob.getBumpers().getValor()!=0){
				rob.getArquitectura().getControlador().informarChoque();
			System.out.println("Informo de Choque");	
			}
			
			double ri = (double) rob.getMotor().getRuedaIzda();
			double rd = (double) rob.getMotor().getRuedaDcha();
		//	rob.getMotor().setRuedas((int)ri, (int)rd);
			System.out.println("x= " + ri);
			System.out.println("y= " + rd);
			
          
			try {
				Thread.sleep(3500);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		System.out.println("Salir del Sistema");
		
		
	}
	
}

